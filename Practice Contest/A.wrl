Problem: Old Magician
Language: Whirl
Author: KirarinSnow
Usage: whirl thisfile.wrl <input.in >output.out
Comments: Using the Ruby interpreter:
              http://www.bigzaphod.org/whirl/kang-whirl.rb



      FORMAT:
      OPVAL | MATHVAL | MEMORY (asterisk denotes current memory location)

      I and O are used to denote the digits one and zero, respectively.

      _ denotes an unknown value.

      Operations preceded by - are math ring operations; others are op ring.

      Our general memory (not specific to any individual problem) consists
      of six slots: V C T X Y Z. This is followed by local memory, to be used
      for each test case, as needed by the problem.

      V is the number of instructions used to compute each test case.
      This value will be used in order to jump back to the appropriate point
      in order to handle the next test case.

      C is the case counter, initialized to T and decremented for each case.

      T is the total number of cases, set to the first integer read from stdin.

      X, Y, and Z are used for computation.


BEGIN PROGRAM

                   HEAD OF GENERAL MEMORY
           _ | _ | _*

STORE V (modify depending on problem):
      V = -744I = -(IO63 * 7)

  (STORE IO63)
00          NOP
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000
0100 00      -STORE, NOP
0100 00      -ADD, NOP
00 00        -ADD, NOP
00 00        -ADD, NOP
00 00        -ADD, NOP (5)
00 00        -ADD, NOP
00 00        -ADD, NOP (7)
0111100 00   -NEG, NOP
011100 00    -STORE, NOP
01110100     -NOP





1100 00 1111100 00 1111100 00
ONE        I | _ | V*
-NOP
DADD       I | _ | V _*
-NOP
NOP
-NOP


11100 11111100 111111100 111111100
ZERO       O | _ | V _*
-ZERO      O | O | V _*
INT/IO     O | O | V T*
-LOAD	   O | T | V T*

111100 0110100 1111100
ONE        I | T | V T*
-NOP
DADD       I | T | V T _*

                  ( first occurrence of T is now C )
1100 00 111100 01100
-STORE     I | T | V C T*
DADD       I | T | V C T _*
-ZERO      I | O | V C T _*
STORE      I | O | V C T I*

111100 1111110100 1111100 00
-NOT       I | I | V C T I*
NOP
-ADD       I | 2 | V C T I*
NOP

00 00 1111111100 00
-ADD       I | 3 | V C T I*
NOP
-NEG       I | -3 | V C T I*
NOP

11100 111100 111111111100 11100
-STORE     I | -3 | V C T -3*
LOAD       -3 | -3 | V C T -3*
-NOP
DADD       -3 | -3 | V* C T -3

00 111111100 00 111100
-NOP
ONE        I | -3 | V* C T -3
-NOP
PADD       (proceed to next instruction)

    MOVE OP POINTER TO PADD FACING CW
    MATH POINTER IS ON -NOOP FACING CW
    MEM POINTER IS ON V


BEGIN LOOP

    OP POINTER IS AT PADD FACING CW
    MATH POINTER IS ON -NOOP FACING CW
    MEM POINTER IS ON V

           _ | _ | V* C T -3
00 11111100 00
-NOP
NOP
-NOP

1100 00 1111100 00
ONE        I | _ | V* C T -3
-NOP
DADD       I | _ | V C* T -3
-NOP

1111111100 100 11111111100 1111111111100
ZERO       O | _ | V C* T -3
-LOAD      O | C | V C* T -3
NOP
-NOP


11111111100 IF

    If C is zero (exit condition), program pointer moves ahead as usual.
    If C is nonzero (continue condition), program pointer stays in place.

00    (one step back for continue condition)
         (EXIT)   -NOP, OP FACING CW
	 (CONT)   -NOP, OP FACING CCW

11100 (move three steps)
         (EXIT)   NOP, OP FACING CW
         (CONT)   PADD, OP FACING CCW

00    (one step back for continue condition)
         (EXIT)   -NOP, OP FACING CW
         (CONT)   -NOP, OP FACING CW

100 (move one step)
         (EXIT)   EXIT, program terminates
         (CONT)   DADD


           O | C | V C* T -3

00 1111100 11111100 00
-NOP
NOP
-ZERO      O | O | V C* T -3
NOP

111100 00 100 00
-NOT       O | I | V C* T -3
NOP
-NEG       O | -I | V C* T -3
NOP

111100 00
-ADD       O | C-I | V C* T -3
NOP
             ( C is decremented ... C now denotes the new value )
0110100 00
-STORE     O | C | V C* T -3
NOP


111111111100 1100 0110100 1111100 111100 00
-NOP
ONE        I | C | V C* T -3
-NEG       I | -C | V C* T -3
DADD       I | -C | V C T* -3
-ADD       I | T-C | V C T* -3
DADD       I | T-C | V C T -3*

011110100 00 1100 00
-NOP
DADD       I | T-C | V C T -3 _*
-STORE     I | T-C | V C T -3 T-C*
DADD       I | T-C | V C T -3 T-C _*

01110100 1111100
-NOP
NOP

PRINT 'C':
11111100 00  -ZERO, NOP
111100 00    -NOT, NOP
111100 00    -STORE, NOP
   -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000
0100 111100    -STORE, LOAD
1100 01111100  -NOP, ASCII/IO
10100 0100     -NOP, NOP

PRINT 'a':
11111100 00  -ZERO, NOP
111100 00    -NOT, NOP
111100 00    -STORE, NOP
   -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000
0100 111100    -STORE, LOAD
1100 01111100  -NOP, ASCII/IO
10100 0100     -NOP, NOP

PRINT 's':
11111100 00  -ZERO, NOP
111100 00    -NOT, NOP
111100 00    -STORE, NOP
   -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000

 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000
0100 111100    -STORE, LOAD
1100 01111100  -NOP, ASCII/IO
10100 0100     -NOP, NOP

PRINT 'e':
11111100 00  -ZERO, NOP
111100 00    -NOT, NOP
111100 00    -STORE, NOP
   -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000

 0000
0100 111100    -STORE, LOAD
1100 01111100  -NOP, ASCII/IO
10100 0100     -NOP, NOP

PRINT ' ':
11111100 00  -ZERO, NOP
111100 00    -NOT, NOP
111100 00    -STORE, NOP
   -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000
0100 111100    -STORE, LOAD
1100 01111100  -NOP, ASCII/IO
10100 0100     -NOP, NOP

PRINT '#':
11111100 00  -ZERO, NOP
111100 00    -NOT, NOP
111100 00    -STORE, NOP
   -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000
0100 111100    -STORE, LOAD
1100 01111100  -NOP, ASCII/IO
10100 0100     -NOP, NOP


          I | T-C | V C T -3 T-C _*

11111100 00 111100 00
-ZERO     I | O | V C T -3 T-C _*
NOP
-NOT      I | I | V C T -3 T-C _*
NOP

100 00 11100 111100
-NEG      I | -I | V C T -3 T-C _*
NOP
-STORE    I | -I | V C T -3 T-C -I*
LOAD      -I | -I | V C T -3 T-C -I*

01110100 11100 00 111111100
-NOP
DADD      -I | -I | V C T -3 T-C* -I
-NOP
ONE       I | -I | V C T -3 T-C* -I

00 0111100 00 11100
-NOP
INT/IO   (print case number)
-NOP
DADD      I | -I | V C T -3 T-C -I*

00 01111100
-NOP
NOP


PRINT ':':
11111100 00  -ZERO, NOP
111100 00    -NOT, NOP
111100 00    -STORE, NOP
   -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000
0100 111100    -STORE, LOAD
1100 01111100  -NOP, ASCII/IO
10100 0100     -NOP, NOP

PRINT ' ':
11111100 00  -ZERO, NOP
111100 00    -NOT, NOP
111100 00    -STORE, NOP
   -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000
0100 111100    -STORE, LOAD
1100 01111100  -NOP, ASCII/IO
10100 0100     -NOP, NOP


          _ | _ | V C T -3 T-C -I*

00 1100 11111100 111111111100 11111100 00
-NOP
ONE       I | _ | V C T -3 T-C -I*
-ZERO     I | O | V C T -3 T-C -I*
NOP
-NOP
NOP


00 111111100 00 1111100 00
-NOP
DADD      I | -I | V C T -3 T-C -I _*
-NOP
NOP
-NOP



BEGIN MAIN

BEGIN SETUP

                   HEAD OF LOCAL MEMORY
1100 11111100 1111100 111100
ONE        I | _ | _*
-ZERO      I | O | _*
DADD       I | O | _ _*
-NOT       I | I | _ _*

111111111100 1111100 111111100 0100
STORE      I | I | _ I*
-ADD       I | 2 | _ I*
NOP
-STORE     I | 2 | _ 2*

111111100 11100 1111100 011100
DADD       I | 2 | _ 2 _*
-NEG       I | -2 | _ 2 _*
NOP
-STORE     I | -2 | _ 2 -2*

111111100 011100 1111100 011100
DADD       I | -2 | _ 2 -2 _*
-NEG       I | 2 | _ 2 -2 _*
NOP
-STORE     I | 2 | _ 2 -2 2*

00 100 00 00
NOP
-ADD       I | 4 | _ 2 -2 2*
NOP
-ADD       I | 6 | _ 2 -2 2*

1111100 00 111111100 0100
STORE      I | 6 | _ 2 -2 I*
-ADD       I | 7 | _ 2 -2 I*
NOP
-STORE     I | 7 | _ 2 -2 7*

111111100 1110100 01100 00
DADD       I | 7 | _ 2 -2 7 _*
-NOP
STORE      I | 7 | _ 2 -2 7 I*
-NOP

01100 00 00 00 1111100
DADD       I | 7 | _ 2 -2 7 I _*
-NOP
DADD       I | 7 | _ 2 -2 7 I _ _*
-NOP
NOP

STORE 'WHITE\n':

  (STORE 'W' AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP

  (STORE 'H' AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP

  (STORE 'I' AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP

  (STORE 'T' AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP

  (STORE 'E' AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP

  (STORE NEWLINE AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP


           I | _ | _ 2 -2 7 I _ W H I T E \n _*

STORE -I2:
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000
1111111100 00  -NEG, NOP
11110100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP

           I | _ | _ 2 -2 7 I _ W H I T E \n -I2 _*


STORE 'BLACK\n':

  (STORE 'B' AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP

  (STORE 'L' AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP

  (STORE 'A' AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP

  (STORE 'C' AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP

  (STORE 'K' AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP

  (STORE NEWLINE AND DADD)
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
0100 111111100   -STORE, DADD
1110100 1111100  -NOP, NOP


           I | _ | _ 2 -2 7 I _ W H I T E \n -I2 B L A C K \n _*

STORE -I9:
11111100 00 -ZERO, NOP
111100 00   -NOT, NOP
111100 00   -STORE, NOP
  -ADD, NOP REPEATEDLY ...
    1 0000 0000 0000 0000 0000 0000 0000 0000 0000
 0000 0000 0000 0000 0000 0000 0000 0000 0000
1111111100 00    -NEG, NOP
11110100 111100  -STORE, LOAD

           -I9 | -I9 | _ 2 -2 7 I _ W H I T E \n -I2 B L A C K \n -I9*

1110100 11100    -NOP, DADD

           -I9 | -I9 | _* 2 -2 7 I _ W H I T E \n -I2 B L A C K \n -I9

00               -NOP

END SETUP


BEGIN COMPUTE

1111111100 11111100 111111100 11111100
ZERO       O | _ | _* 2 -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
-ZERO      O | O | _* 2 -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
INT/IO	   O | O | W* 2 -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
-NOP

00 100 111100 0110100
INT/IO	   O | O | B* 2 -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
-LOAD      O | B | B* 2 -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
ONE        I | B | B* 2 -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
-NOP

1111100 1111100 1111100
DADD       I | B | B 2* -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
-DIV       I | B/2 | B 2* -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
NOP

              ( b = floor(B/2)*2 )
0100 00 1100 111111100
-MUL       I | b | B 2* -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
NOP
-STORE     I | b | B b* -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
DADD       I | b | B b -2* 7 I _ W H I T E \n -I2 B L A C K \n -I9

1110100 011100 00 011100
-NOP
LOAD       -2 | b | B b -2* 7 I _ W H I T E \n -I2 B L A C K \n -I9
-NOP
DADD       -2 | b | B* b -2 7 I _ W H I T E \n -I2 B L A C K \n -I9

0100 1111100
-NEG       -2 | -b | B* b -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
NOP

                ( B-b -> B%2 )
0111100 1100
-ADD       -2 | B%2 | B* b -2 7 I _ W H I T E \n -I2 B L A C K \n -I9
ONE        I | B%2 | B* b -2 7 I _ W H I T E \n -I2 B L A C K \n -I9

011110100 1111100 00 00 00 00
-NOP
DADD
-NOP
DADD
-NOP
DADD       I | B%2 | B b -2 7* I _ W H I T E \n -I2 B L A C K \n -I9

111100 00
-MUL       I | 7*(B%2) | B b -2 7* I _ W H I T E \n -I2 B L A C K \n -I9
DADD       I | 7*(B%2) | B b -2 7 I* _ W H I T E \n -I2 B L A C K \n -I9

             ( A = 7*(B%2)+I = amount to DADD )
0100 00 100 011100 1110100
-ADD       I | A | B b -2 7 I* _ W H I T E \n -I2 B L A C K \n -I9
DADD       I | A | B b -2 7 I _* W H I T E \n -I2 B L A C K \n -I9
-STORE     I | A | B b -2 7 I A* W H I T E \n -I2 B L A C K \n -I9
LOAD       A | A | B b -2 7 I A* W H I T E \n -I2 B L A C K \n -I9
-NOP

           (branching happens ... asterisks at both possible locations)
011100 00 111111100 00
DADD       A | A | B b -2 7 I A W* H I T E \n -I2 B* L A C K \n -I9
-NOP
ONE        I | A | B b -2 7 I A W* H I T E \n -I2 B* L A C K \n -I9
-NOP

11111111100 00 1111111100 00
     111100 00 1111111100 00
     111100 00 1111111100 00
     111100 00 1111111100 00
     111100 00 1111111100 00
     111100 00 1111111100 00
ASCII/IO, -NOP, DADD, -NOP      REPEAT 6 TIMES

           A | A | B b -2 7 I A W H I T E \n -I2* B L A C K \n -I9*

011100 00 011100 00
LOAD       -I2 or -I9 | A | B b -2 7 I A W H I T E \n -I2* B L A C K \n -I9*
-NOP
DADD       -I2 or -I9 | A | B* b -2 7 I A W H I T E \n -I2 B L A C K \n -I9
-NOP

1111100
00
NOP
-NOP

END COMPUTE


END MAIN


          _ | _ | V C T -3 T-C -I _*

00 11111100 00 111100
NOP
-ZERO     _ | O | V C T -3 T-C -I _*
NOP
-NOT      _ | I | V C T -3 T-C -I _*

00 111100 00 100
NOP
-STORE    _ | I | V C T -3 T-C -I I*
NOP
-ADD      _ | 2 | V C T -3 T-C -I I*

00 00 00 00
NOP
-ADD      _ | 3 | V C T -3 T-C -I I*
NOP
-ADD      _ | 4 | V C T -3 T-C -I I*

00 00 00 00
NOP
-ADD      _ | 5 | V C T -3 T-C -I I*
NOP
-ADD      _ | 6 | V C T -3 T-C -I I*

00 1111111100 00 11100
NOP
-NEG      _ | -6 | V C T -3 T-C -I I*
NOP
-STORE    _ | -6 | V C T -3 T-C -I -6*

111100 01110100 11100 00
LOAD      -6 | -6 | V C T -3 T-C -I -6*
-NOP
DADD      -6 | -6 | V* C T -3 T-C -I -6
-NOP

011110100 00
LOAD      V | -6 | V* C T -3 T-C -I -6
-NOP
 
    MOVE OP POINTER TO PADD FACING CW
    MATH POINTER IS ON -NOOP FACING CW
    MEM POINTER IS ON V

1100
PADD      (GOTO BEGINNING OF LOOP)

END LOOP


END PROGRAM
